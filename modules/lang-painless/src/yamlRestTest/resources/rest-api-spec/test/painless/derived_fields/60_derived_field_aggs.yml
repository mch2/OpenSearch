---
setup:
  - skip:
      version: " - 2.3.99"
      reason: "Derived fields are only available in OpenSearch 2.4+"

  - do:
      indices.create:
        index: test
        body:
          mappings:
            properties:
              text:
                type: text
              keyword:
                type: keyword
              long:
                type: long
              float:
                type: float
              double:
                type: double
              date:
                type: date
              geo:
                type: geo_point
              ip:
                type: ip
              boolean:
                type: boolean
              array_of_long:
                type: long
              json_field:
                type: text
            derived:
              derived_text:
                type: text
                script: "emit(params._source[\"text\"])"
              derived_text_prefilter_field:
                type: text
                script: "emit(params._source[\"text\"])"
                prefilter_field: "text"
              derived_keyword:
                type: keyword
                script: "emit(params._source[\"keyword\"])"
              derived_long:
                type: long
                script: "emit(params._source[\"long\"])"
              derived_float:
                type: float
                script: "emit(params._source[\"float\"])"
              derived_double:
                type: double
                script: "emit(params._source[\"double\"])"
              derived_date:
                type: date
                script: "emit(ZonedDateTime.parse(params._source[\"date\"]).toInstant().toEpochMilli())"
              derived_geo:
                type: geo_point
                script: "emit(params._source[\"geo\"][0], params._source[\"geo\"][1])"
              derived_ip:
                type: ip
                script: "emit(params._source[\"ip\"])"
              derived_boolean:
                type: boolean
                script: "emit(params._source[\"boolean\"])"
              derived_array_of_long:
                type: long
                script: "emit(params._source[\"array_of_long\"][0]);emit(params._source[\"array_of_long\"][1]);"
              derived_object:
                type: object
                properties:
                  keyword: keyword
                script: "emit(params._source[\"json_field\"])"
                prefilter_field: "json_field"

  - do:
      bulk:
        refresh: true
        body:
          - index:
              _index: test
              _id: 1
          - text: "peter piper"
            keyword: "foo"
            long: 1
            float: 1.0
            double: 1.0
            date: "2017-01-01T00:00:00Z"
            geo: [0.0, 20.0]
            ip: "192.168.0.1"
            boolean: true
            array_of_long: [1, 2]
            json_field: "{\"keyword\":\"json_keyword1\",\"long\":10,\"float\":10.0,\"double\":10.0,\"date\":\"2021-01-01T00:00:00Z\",\"ip\":\"10.0.0.1\",\"boolean\":true, \"array_of_long\": [1, 2]}"
          - index:
              _index: test
              _id: 2
          - text: "piper picked a peck"
            keyword: "bar"
            long: 2
            float: 2.0
            double: 2.0
            date: "2017-01-02T00:00:00Z"
            geo: [10.0, 30.0]
            ip: "192.168.0.2"
            boolean: false
            array_of_long: [2, 3]
            json_field: "{\"keyword\":\"json_keyword2\",\"long\":20,\"float\":20.0,\"double\":20.0,\"date\":\"2021-02-01T00:00:00Z\",\"ip\":\"10.0.0.2\",\"boolean\":false, \"array_of_long\": [2, 3]}"
          - index:
              _index: test
              _id: 3
          - text: "peck of pickled peppers"
            keyword: "baz"
            long: -3
            float: -3.0
            double: -3.0
            date: "2017-01-03T00:00:00Z"
            geo: [20.0, 40.0]
            ip: "192.168.0.3"
            boolean: true
            array_of_long: [3, 4]
            json_field: "{\"keyword\":\"json_keyword3\",\"long\":30,\"float\":30.0,\"double\":30.0,\"date\":\"2021-03-01T00:00:00Z\",\"ip\":\"10.0.0.3\",\"boolean\":true, \"array_of_long\": [3, 4]}"
          - index:
              _index: test
              _id: 4
          - text: "pickled peppers"
            keyword: "qux"
            long: 4
            float: 4.0
            double: 4.0
            date: "2017-01-04T00:00:00Z"
            geo: [30.0, 50.0]
            ip: "192.168.0.4"
            boolean: false
            array_of_long: [4, 5]
            json_field: "{\"keyword\":\"json_keyword4\",\"long\":40,\"float\":40.0,\"double\":40.0,\"date\":\"2021-04-01T00:00:00Z\",\"ip\":\"10.0.0.4\",\"boolean\":false, \"array_of_long\": [4, 5]}"
          - index:
              _index: test
              _id: 5
          - text: "peppers"
            keyword: "quux"
            long: 5
            float: 5.0
            double: 5.0
            date: "2017-01-05T00:00:00Z"
            geo: [40.0, 60.0]
            ip: "192.168.0.5"
            boolean: true
            array_of_long: [5, 6]
            json_field: "{\"keyword\":\"json_keyword5\",\"long\":50,\"float\":50.0,\"double\":50.0,\"date\":\"2021-05-01T00:00:00Z\",\"ip\":\"10.0.0.5\",\"boolean\":true, \"array_of_long\": [5, 6]}"

---
"Test terms aggregation on derived_keyword":
  - do:
      search:
        index: test
        body:
          size: 0
          aggs:
            keywords:
              terms:
                field: derived_keyword

  - match: { hits.total.value: 5 }
  - length: { aggregations.keywords.buckets: 5 }
  - match: { aggregations.keywords.buckets.0.key: "bar" }
  - match: { aggregations.keywords.buckets.0.doc_count: 1 }

---
"Test range aggregation on derived_long":
  - do:
      search:
        index: test
        body:
          size: 0
          aggs:
            long_ranges:
              range:
                field: derived_long
                ranges:
                  - to: 0
                  - from: 0
                    to: 3
                  - from: 3

  - match: { hits.total.value: 5 }
  - length: { aggregations.long_ranges.buckets: 3 }
  - match: { aggregations.long_ranges.buckets.0.doc_count: 1 }
  - match: { aggregations.long_ranges.buckets.1.doc_count: 2 }
  - match: { aggregations.long_ranges.buckets.2.doc_count: 2 }

---
"Test histogram aggregation on derived_float":
  - do:
      search:
        index: test
        body:
          size: 0
          aggs:
            float_histogram:
              histogram:
                field: derived_float
                interval: 2

  - match: { hits.total.value: 5 }
  - length: { aggregations.float_histogram.buckets: 5 }
  - match: { aggregations.float_histogram.buckets.0.key: -4.0 }
  - match: { aggregations.float_histogram.buckets.0.doc_count: 1 }

---
"Test date_histogram aggregation on derived_date":
  - do:
      search:
        index: test
        body:
          size: 0
          aggs:
            date_histogram:
              date_histogram:
                field: derived_date
                calendar_interval: day

  - match: { hits.total.value: 5 }
  - length: { aggregations.date_histogram.buckets: 5 }
  - match: { aggregations.date_histogram.buckets.0.key_as_string: "2017-01-01T00:00:00.000Z" }
  - match: { aggregations.date_histogram.buckets.0.doc_count: 1 }

---
"Test geo_distance aggregation on derived_geo":
  - do:
      search:
        index: test
        body:
          size: 0
          aggs:
            geo_distances:
              geo_distance:
                field: derived_geo
                origin: "0, 0"
                ranges:
                  - to: 2000km
                  - from: 2000km
                    to: 4000km
                  - from: 4000km

  - match: { hits.total.value: 5 }
  - length: { aggregations.geo_distances.buckets: 3 }
  - match: { aggregations.geo_distances.buckets.0.doc_count: 1 }
  - match: { aggregations.geo_distances.buckets.1.doc_count: 2 }
  - match: { aggregations.geo_distances.buckets.2.doc_count: 2 }

---
"Test ip_range aggregation on derived_ip":
  - do:
      search:
        index: test
        body:
          size: 0
          aggs:
            ip_ranges:
              ip_range:
                field: derived_ip
                ranges:
                  - to: "192.168.0.2"
                  - from: "192.168.0.2"
                    to: "192.168.0.4"
                  - from: "192.168.0.4"

  - match: { hits.total.value: 5 }
  - length: { aggregations.ip_ranges.buckets: 3 }
  - match: { aggregations.ip_ranges.buckets.0.doc_count: 1 }
  - match: { aggregations.ip_ranges.buckets.1.doc_count: 2 }
  - match: { aggregations.ip_ranges.buckets.2.doc_count: 2 }

---
"Test filters aggregation on derived_boolean":
  - do:
      search:
        index: test
        body:
          size: 0
          aggs:
            boolean_filters:
              filters:
                filters:
                  true_values:
                    term:
                      derived_boolean: true
                  false_values:
                    term:
                      derived_boolean: false

  - match: { hits.total.value: 5 }
  - match: { aggregations.boolean_filters.buckets.true_values.doc_count: 3 }
  - match: { aggregations.boolean_filters.buckets.false_values.doc_count: 2 }

---
"Test stats aggregation on derived_array_of_long":
  - do:
      search:
        index: test
        body:
          size: 0
          aggs:
            long_array_stats:
              stats:
                field: derived_array_of_long

  - match: { hits.total.value: 5 }
  - match: { aggregations.long_array_stats.count: 10 }
  - match: { aggregations.long_array_stats.min: 1 }
  - match: { aggregations.long_array_stats.max: 6 }
  - match: { aggregations.long_array_stats.avg: 3.5 }
  - match: { aggregations.long_array_stats.sum: 35 }

---
"Test nested aggregation on derived_object":
  - do:
      search:
        index: test
        body:
          size: 0
          aggs:
            nested_object:
              nested:
                path: derived_object
              aggs:
                keywords:
                  terms:
                    field: derived_object.keyword

  - match: { hits.total.value: 5 }
  - length: { aggregations.nested_object.keywords.buckets: 5 }
  - match: { aggregations.nested_object.keywords.buckets.0.key: "json_keyword1" }
  - match: { aggregations.nested_object.keywords.buckets.0.doc_count: 1 }

---
"Test cardinality aggregation on derived_text":
  - do:
      search:
        index: test
        body:
          size: 0
          aggs:
            unique_texts:
              cardinality:
                field: derived_text

  - match: { hits.total.value: 5 }
  - match: { aggregations.unique_texts.value: 5 }

---
"Test percentiles aggregation on derived_double":
  - do:
      search:
        index: test
        body:
          size: 0
          aggs:
            double_percentiles:
              percentiles:
                field: derived_double
                percents: [25, 50, 75]

  - match: { hits.total.value: 5 }
  - match: { aggregations.double_percentiles.values.25\.0: 1.0 }
  - match: { aggregations.double_percentiles.values.50\.0: 2.0 }
  - match: { aggregations.double_percentiles.values.75\.0: 4.0 }
